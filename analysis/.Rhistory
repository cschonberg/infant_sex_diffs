xlim(0,1.5)+
ylim(0,1.5)+
facet_wrap(~percent_ns)
ggplot(results,aes(true_d,mean_d_sig_percent_mod, color=as.factor(sample_size_per_condition)))+
geom_line()+
#geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.7)+
ylim(0,1.5)+
facet_wrap(~percent_ns)
ggplot(results,aes(true_d,mean_d_sig_percent_mod, color=as.factor(sample_size_per_condition)))+
geom_line()+
#geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~percent_ns)
#hacky solution to the slight (rounding error-related?) imprecision in the 100% reporting condition
results <- results %>%
mutate(
mean_d_sig_percent_mod = case_when(
percent_ns==1~true_d,
TRUE ~mean_d_sig_percent
),
total_sample = 2* sample_size_per_condition
) %>%
ggplot(results,aes(true_d,mean_d_sig_percent_mod, color=as.factor(sample_size_per_condition)))+
geom_line()+
#geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~percent_ns)
#hacky solution to the slight (rounding error-related?) imprecision in the 100% reporting condition
results <- results %>%
mutate(
mean_d_sig_percent_mod = case_when(
percent_ns==1~true_d,
TRUE ~mean_d_sig_percent
),
total_sample = 2* sample_size_per_condition)
ggplot(results,aes(true_d,mean_d_sig_percent_mod, color=as.factor(sample_size_per_condition)))+
geom_line()+
#geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~percent_ns)
ggplot(results,aes(true_d,mean_d_sig_percent_mod, color=as.factor(sample_size_per_condition)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~percent_ns)
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent_mod, color=as.factor(total_sample)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~percent_ns)
ggplot(results,aes(true_d,mean_d_all, color=as.factor(sample_size_per_condition)))+
geom_line()+
#geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size Estimated")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)
ggplot(results,aes(true_d,mean_d_sig_percent, color=as.factor(2*sample_size_per_condition)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~percent_ns)
ggplot(results,aes(true_d,mean_d_sigonly, color=as.factor(2*sample_size_per_condition)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)
ggsave("winners_curse_simulation.jpeg")
ggsave("winners_curse_simulation.tiff")
ggsave("winners_curse_simulation.pdf")
unique(results$percent_ns)
results <- results %>%
mutate(
mean_d_sig_percent_mod = case_when(
percent_ns==1~true_d,
TRUE ~mean_d_sig_percent
),
total_sample = 2* sample_size_per_condition,
non_sig_reported = case_when(
percent_ns == 1 ~ "100% ns results",
percent_ns == 2/3 ~ "67% ns results",
percent_ns == 1/3 ~ "33% ns results",
percent_ns == 0 ~ "Only significant results"
))
unique(results$non_sig_reported)
table(results$non_sig_reported)
results <- results %>%
mutate(
mean_d_sig_percent_mod = case_when(
percent_ns==1~true_d,
TRUE ~mean_d_sig_percent
),
total_sample = 2* sample_size_per_condition,
non_sig_reported = case_when(
percent_ns == 1 ~ "100% ns results",
percent_ns == 2/3 ~ "67% ns results",
percent_ns == 1/3 ~ "33% ns results",
percent_ns == 0 ~ "0% ns results"
))
results$non_sig_reported = factor(results$non_sig_reported,levels=c(
"0% ns results",
"33% ns results",
"67% ns results",
"100% ns results"))
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent_mod, color=as.factor(total_sample)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported)
results$non_sig_reported = factor(results$non_sig_reported,levels=c(
"100% ns results",
"67% ns results",
"0% ns results",
"33% ns results"
))
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent_mod, color=as.factor(total_sample)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported)
results$non_sig_reported = factor(results$non_sig_reported,levels=c(
"100% ns results",
"67% ns results",
"33% ns results",
"0% ns results"
))
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent, color=as.factor(total_sample)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported)
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent, color=as.factor(total_sample)))+
geom_line()+
#geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported)
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent, color=as.factor(total_sample)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported)
?facet_wrap
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent_mod, color=as.factor(total_sample)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.7,0.3))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported,nrow=1)
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent_mod, color=as.factor(total_sample)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.9,0.3))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported,nrow=1)
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent_mod, color=as.factor(total_sample)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.1,0.8))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported,nrow=1)
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent_mod, color=as.factor(total_sample)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.05,0.8))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported,nrow=1)
ggsave("winners_curse_simulation_percent_ns.jpeg",width=12,height=6)
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent_mod, color=as.factor(total_sample)))+
geom_line()+
#geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.05,0.8))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported,nrow=1)
?theme
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent_mod, color=as.factor(total_sample)))+
geom_line()+
#geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.05,0.8)
axis.title = element_text(size = 24),
axis.text = element_text(size = 20),
legend.text = element_text(size=20),
legend.title=element_text(size=24))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported,nrow=1)
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent_mod, color=as.factor(total_sample)))+
geom_line()+
#geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.05,0.8)
axis.title = element_text(size = 24),
axis.text = element_text(size = 20),
legend.text = element_text(size=20),
legend.title=element_text(size=24))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported,nrow=1)
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent_mod, color=as.factor(total_sample)))+
geom_line()+
#geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.05,0.8),
axis.title = element_text(size = 24),
axis.text = element_text(size = 20),
legend.text = element_text(size=20),
legend.title=element_text(size=24))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported,nrow=1)
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent_mod, color=as.factor(total_sample)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nEstimated from Significant Results Only")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.05,0.8),
axis.title = element_text(size = 24),
axis.text = element_text(size = 20),
legend.text = element_text(size=20),
legend.title=element_text(size=24),
strip.text=element_text(size = 22))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported,nrow=1)
ggsave("winners_curse_simulation_percent_ns.jpeg",width=12,height=6)
ggsave("winners_curse_simulation_percent_ns.jpeg",width=14,height=7)
ggplot(filter(results,total_sample %in% c(20,30,40,60,100)),aes(true_d,mean_d_sig_percent_mod, color=as.factor(total_sample)))+
#geom_line()+
geom_smooth(se=F,method="loess",span=0.2,size=1.5)+
geom_line(data=data.frame(x=seq(0,2,0.1),y=seq(0,2,0.1)), aes(x,y),size=1.5,color="black")+
xlab("True Effect Size (Cohen's d)")+
ylab("Average Effect Size \nFrom Selectively Reported Studies")+
scale_color_viridis_d(
name = "SAMPLE SIZE"
)+
theme(legend.position = c(0.05,0.8),
axis.title = element_text(size = 24),
axis.text = element_text(size = 20),
legend.text = element_text(size=20),
legend.title=element_text(size=24),
strip.text=element_text(size = 22))+
xlim(0,1.5)+
ylim(0,1.7)+
facet_wrap(~non_sig_reported,nrow=1)
ggsave("winners_curse_simulation_percent_ns.jpeg",width=14,height=7)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
# note: did a first pass by hand on data to:
# - remove weird characters and delete harrison et al 2011
# - add reliability coding indicator variable (0 = no, 1 = yes) after last experiment question (before 4 confirmation questions)
# - add longitudinal coding indicator variable (0 = no, 1 = yes) after reliability variable
# - add multi-age group coding indicator variable (0 = no, 1 = yes) after longitudinal variable
# - remove duplicates that weren't reliability coding (i.e. added by the same person)
## outstanding Q: what to do about longitudinal studies & studies with multiple age groups? (how to code age)
col_names <- c(
"date",
"email_address",
"authors",
"year",
"journal",
"doi",
"abstract_text",
"keywords",
"n_experiments",
"hypothesis_present",
"n_boys_n_girls",
"sample_age",
"sexdiff_analysis_reported",
"sexdiff_reported",
"sexdiff_stats",
"is_exp2",
"exp2_n_boys_n_girls",
"exp2_sample_age",
"exp2_sexdiff_analysis_reported",
"exp2_sexdiff_reported",
"exp2_sexdiff_stats",
"is_exp3",
"exp3_n_boys_n_girls",
"exp3_sample_age",
"exp3_sexdiff_analysis_reported",
"exp3_sexdiff_reported",
"exp3_sexdiff_stats",
"is_exp4",
"exp4_n_boys_n_girls",
"exp4_sample_age",
"exp4_sexdiff_analysis_reported",
"exp4_sexdiff_reported",
"exp4_sexdiff_stats",
"is_more_exps",
"more_exps_info",
"reliability_coding",
"is_longitudinal",
"is_multi_age",
"pdf_saved",
"file_renamed",
"file_uploaded",
"check_duplicate"
)
raw_data <- read_csv("../responses_4-5-21_edited.csv")
colnames(raw_data) <- col_names
raw_data <- raw_data %>%
select(-(39:42)) %>%
remove_empty("cols") %>%
filter(reliability_coding==0) %>%
#filter out non Infancy/ IBD journals
filter(journal %in% c("Infant Behavior and Development","Infancy"))
processed_data_exp1s <- raw_data %>%
filter(is_longitudinal==0 & is_multi_age==0) %>%
select(authors, year, journal, keywords, n_experiments, hypothesis_present, n_boys_n_girls, sample_age,
sexdiff_analysis_reported, sexdiff_reported) %>%
mutate(hypothesis_numeric = ifelse(hypothesis_present=="Yes",1,0),
sexdiff_analysis_numeric = ifelse(sexdiff_analysis_reported=="Yes",1,0),
sexdiff_reported_numeric = ifelse(sexdiff_reported=="Yes",1,0),
checked_diff_with_hypothesis = ifelse((hypothesis_numeric==1 & sexdiff_analysis_numeric==1),1,0),
found_diff_with_hypothesis = ifelse((hypothesis_numeric==1 & sexdiff_reported_numeric==1),1,0),
checked_diff_without_hypothesis = ifelse((hypothesis_numeric==0 & sexdiff_analysis_numeric==1),1,0),
found_diff_without_hypothesis = ifelse((hypothesis_numeric==0 & sexdiff_reported_numeric==1),1,0)
) %>%
separate(., n_boys_n_girls, into = c("nboys", "ngirls"), sep="; ") %>%
filter(!(is.na(ngirls))) %>%
separate(., nboys, into=c("n_boys", "boys")) %>%
separate(., ngirls, into=c("n_girls","girls")) %>%
select(-boys, -girls)
#make numeric
processed_data_exp1s$n_boys = as.numeric(processed_data_exp1s$n_boys)
processed_data_exp1s$n_girls = as.numeric(processed_data_exp1s$n_girls)
processed_data_exp1s$n_experiments = as.numeric(processed_data_exp1s$n_experiments)
processed_data_exp1s$sample_age = as.numeric(processed_data_exp1s$sample_age)
processed_data_exp1 <- processed_data_exp1s %>%
mutate(n_participants = n_boys + n_girls)
hist(processed_data_exp1$n_experiments)
hist(processed_data_exp1$sample_age)
#look at histogram for non-outlier sample size papers
hist(filter(processed_data_exp1, n_participants<500)$n_participants)
summarised_exp1_data <- processed_data_exp1 %>%
summarise(n_total_papers = n(),
n_hypothesized_difference = sum(hypothesis_numeric),
n_checked = sum(sexdiff_analysis_numeric),
n_checked_with_hypothesis = sum(checked_diff_with_hypothesis),
n_checked_without_hypothesis = sum(checked_diff_without_hypothesis),
n_found_diff_with_hypothesis = sum(found_diff_with_hypothesis),
n_found_diff_without_hypothesis = sum(found_diff_without_hypothesis),
samplesize_min = min(n_participants),
samplesize_max = max(n_participants),
samplesize_mean = mean(n_participants),
samplesize_median = median(n_participants)
)
View(processed_data_exp1)
View(summarised_exp1_data)
